<?xml version="1.0"?>
<!-- $Id$ -->
<!--
  Zeppelin NT-07 airship multiplayer copilot view and control.

  Copyright (C) 2008 - 2009  Anders Gidenstam  (anders(at)gidenstam.org)
  This file is licensed under the GPL license version 2 or later.
-->
<!--
  Usage: fgfs - -prop:/sim/remote/pilot-callsign="remote pilot callsign" - -aircraft=ZLT-NT-copilot
-->
<PropertyList>

 <sim>

  <description>Zeppelin NT07 multiplayer copilot</description>
  <author>Anders Gidenstam</author>
  <status>development</status>
  <aircraft-version>$Id$</aircraft-version>
  
  <flight-model>null</flight-model>

  <presets>
   <onground type="bool">false</onground>
   <altitude-agl-ft type="double">30.0</altitude-agl-ft>
  </presets>

  <!-- 3d model -->
  <model>
   <path>Aircraft/ZLT-NT/Models/ZLT-NT-copilot.xml</path>
  </model>

  <!-- Views -->
  <view n="0">
   <!-- Pilot's position. -->
   <name>Copilot View</name>
   <type>lookfrom</type>
   <config>
    <internal type="bool">true</internal>
    <from-model type="bool">false</from-model>
    <from-model-idx type="int">0</from-model-idx>
    <eye-lat-deg-path>/position/latitude-deg</eye-lat-deg-path>
    <eye-lon-deg-path>/position/longitude-deg</eye-lon-deg-path>
    <eye-alt-ft-path>/position/altitude-ft</eye-alt-ft-path>
    <eye-heading-deg-path>/orientation/heading-deg</eye-heading-deg-path>
    <eye-pitch-deg-path>/orientation/pitch-deg</eye-pitch-deg-path>
    <eye-roll-deg-path>/orientation/roll-deg</eye-roll-deg-path>

    <!-- x/y/z == right/up/back -->
    <x-offset-m type="double">  0.45 </x-offset-m>
    <y-offset-m type="double"> -7.75 </y-offset-m>
    <z-offset-m type="double"> 18.65 </z-offset-m>
    <pitch-offset-deg type="double"> -20.0 </pitch-offset-deg>
   </config>
  </view>
  <!-- Views -->
  <view n="100">
   <!-- Pilot's position. -->
   <name>Pilot View</name>
   <type>lookfrom</type>
   <config>
    <!-- x/y/z == right/up/back -->
    <internal type="bool">true</internal>
    <from-model type="bool">false</from-model>
    <eye-lat-deg-path>/position/latitude-deg</eye-lat-deg-path>
    <eye-lon-deg-path>/position/longitude-deg</eye-lon-deg-path>
    <eye-alt-ft-path>/position/altitude-ft</eye-alt-ft-path>
    <eye-heading-deg-path>/orientation/heading-deg</eye-heading-deg-path>
    <eye-pitch-deg-path>/orientation/pitch-deg</eye-pitch-deg-path>
    <eye-roll-deg-path>/orientation/roll-deg</eye-roll-deg-path>

    <x-offset-m type="double"> -0.45 </x-offset-m>
    <y-offset-m type="double"> -7.75 </y-offset-m>
    <z-offset-m type="double"> 18.65 </z-offset-m>
    <pitch-offset-deg type="double"> -20.0 </pitch-offset-deg>
    <default-field-of-view-deg type="double"> 65 </default-field-of-view-deg>
   </config>
  </view>
  <view n="101">
   <name>Passenger View</name>
   <type>lookfrom</type>
   <config>
    <!-- x/y/z == right/up/back -->
    <internal type="bool">true</internal>
    <from-model type="bool">false</from-model>
    <eye-lat-deg-path>/position/latitude-deg</eye-lat-deg-path>
    <eye-lon-deg-path>/position/longitude-deg</eye-lon-deg-path>
    <eye-alt-ft-path>/position/altitude-ft</eye-alt-ft-path>
    <eye-heading-deg-path>/orientation/heading-deg</eye-heading-deg-path>
    <eye-pitch-deg-path>/orientation/pitch-deg</eye-pitch-deg-path>
    <eye-roll-deg-path>/orientation/roll-deg</eye-roll-deg-path>

    <x-offset-m type="double">  0.10 </x-offset-m>
    <y-offset-m type="double"> -7.75 </y-offset-m>
    <z-offset-m type="double"> 26.50 </z-offset-m>
    <heading-offset-deg type="double"> 180.0 </heading-offset-deg>
    <pitch-offset-deg type="double"> 0.0 </pitch-offset-deg>
    <default-field-of-view-deg type="double"> 65 </default-field-of-view-deg>
   </config>
  </view>

  <!-- Move the center of the external views. -->
  <view n="1">
   <config>
    <target-z-offset-m archive="y"> 20.0 </target-z-offset-m>
   </config>
  </view>
  <view n="2">
   <config>
    <target-z-offset-m archive="y"> 20.0 </target-z-offset-m>
   </config>
  </view>
  <view n="3">
   <config>
    <target-z-offset-m archive="y"> 20.0 </target-z-offset-m>
   </config>
  </view>
  <view n="5">
   <config>
    <target-z-offset-m archive="y"> 20.0 </target-z-offset-m>
   </config>
  </view>
  <view n="6">
   <config>
    <target-z-offset-m archive="y"> 20.0 </target-z-offset-m>
   </config>
  </view>

  <chase-distance-m type="double">-120.0</chase-distance-m>

  <sound>
   <audible>true</audible>
   <path>Aircraft/ZLT-NT/Sounds/ZLT-NT-copilot-sound.xml</path>
  </sound>

  <!-- Aircraft specific help. -->
  <help include="help.xml"/>

  <systems>
   <electrical>
    <path/>
   </electrical>
   <autopilot>
    <path/>
   </autopilot>
  </systems>
  <instrumentation>
   <path>Aircraft/ZLT-NT/Systems/copilot-instrumentation.xml</path>
  </instrumentation>

  <menubar>
   <default>
    <menu n="100">
     <label>Zeppelin NT</label>
     <item>
      <label>Select MP-pilot</label>
      <binding>
       <command>nasal</command>
       <script>
        dual_control_tools.
          copilot_dialog.show(aircraft_dual_control.pilot_type);
       </script>
      </binding>
     </item>
     <item>
      <label>About</label>
      <binding>
       <command>nasal</command>
       <script>ZLTNT.about()</script>
      </binding>
     </item>
    </menu>
   </default>
  </menubar>

 </sim>

 <payload>
  <weight>
   <name type="string">Pilot (left)</name>
   <weight-lb alias="/fdm/jsbsim/inertia/pointmass-weight-lbs[3]"/>
   <min-lb type="double">0.0</min-lb>
   <max-lb type="double">300.0</max-lb>
  </weight>
  <weight>
   <name type="string">Pilot (right)</name>
   <weight-lb alias="/fdm/jsbsim/inertia/pointmass-weight-lbs[4]"/>
   <min-lb type="double">0.0</min-lb>
   <max-lb type="double">300.0</max-lb>
  </weight>
  <weight>
   <name type="string">Cabin payload</name>
   <weight-lb alias="/fdm/jsbsim/inertia/pointmass-weight-lbs[5]"/>
   <min-lb type="double">0.0</min-lb>
   <max-lb type="double">1040.0</max-lb>
  </weight>
  <weight>
   <name type="string">Ballast</name>
   <weight-lb alias="/fdm/jsbsim/inertia/pointmass-weight-lbs[0]"/>
   <min-lb type="double">0.0</min-lb>
   <max-lb type="double">10000.0</max-lb>
  </weight>
 </payload>

 <nasal>
  <ZLTNT>
   <file>Aircraft/ZLT-NT/Systems/ZLT-NT-copilot.nas</file>
   <file>Aircraft/ZLT-NT/Systems/mp-network.nas</file>
   <script>
    # Use the minimal remote_mooring instead of mooring.
    ZLTNT.mooring = ZLTNT.remote_mooring;
    # Initialize scenario network as observer.
    ZLTNT.mp_network_init(0);
   </script>
  </ZLTNT>
  <!--  Instrument drivers. -->
  <m877>
   <file>Aircraft/Instruments-3d/clock/M877/M877.nas</file>
  </m877>
  <VHF22>
   <file>Aircraft/ZLT-NT/DualControl/Instruments/VHF-22/ctl22.nas</file>
  </VHF22>
  <VIR32>
   <file>Aircraft/ZLT-NT/DualControl/Instruments/VIR-32/ctl32.nas</file>
  </VIR32>
  <KDI572>
   <file>Aircraft/ZLT-NT/DualControl/Instruments/KDI-572/kdi572.nas</file>
  </KDI572>
  <ADF462>
   <file>Aircraft/ZLT-NT/DualControl/Instruments/ADF-462/ctl62.nas</file>
  </ADF462>
  <CenterMFD>
   <file>Aircraft/ZLT-NT/Models/Instruments/CenterMFD/CenterMFD.nas</file>
  </CenterMFD>
  <!-- citation>
   <file>Aircraft/CitationX/Nasal/flightdirector.nas</file>
   <file>Aircraft/CitationX/Nasal/Primus1000.nas</file>
  </citation -->
  <dual_control_tools>
   <file>Aircraft/ZLT-NT/DualControl/dual-control-tools.nas</file>
  </dual_control_tools>
  <aircraft_dual_control>
   <file>Aircraft/ZLT-NT/Systems/ZLT-NT-dual-control.nas</file>
  </aircraft_dual_control>
  <dual_control>
   <file>Aircraft/ZLT-NT/DualControl/copilot-dual-control.nas</file>
  </dual_control>
 </nasal>

 <!--
   Define some MP enabled properties.
   NOTE: since the copilot isn't an aircraft many properties are free
         for use.
 -->
 <surface-positions>
  <!-- MP elevator trim -->
  <left-aileron-pos-norm type="double"/>
  <!-- MP ? -->
  <!-- right-aileron-pos-norm type="double"/ -->
  <!-- MP elevator cmd -->
  <elevator-pos-norm type="double">0.0</elevator-pos-norm>
  <!-- MP rudder cmd -->
  <rudder-pos-norm type="double">0.0</rudder-pos-norm>
  <!-- MP ? -->
  <!-- flap-pos-norm type="double"/ -->
  <!-- MP ? -->
  <!-- speedbrake-pos-norm type="double"/ -->
 </surface-positions>
 <sim n="0">
  <multiplay n="0">
   <generic n="0">
    <!-- MP switches 1 -->
    <int n="0" type="int"/>
    <!-- MP TDM1 -->
    <string n="0" type="string"></string>
    <!-- MP RPM select -->
    <float n="0" alias="/controls/engines/engine[0]/throttle"/>
    <float n="1" alias="/controls/engines/engine[1]/throttle"/>
    <float n="2" alias="/controls/engines/engine[2]/throttle"/>
    <!-- MP thrust -->
    <float n="3" alias="/controls/engines/engine[0]/propeller-pitch"/>
    <float n="4" alias="/controls/engines/engine[1]/propeller-pitch"/>
    <float n="5" alias="/controls/engines/engine[2]/propeller-pitch"/>
    <!-- MP mixture -->
    <float n="6" alias="/controls/engines/engine[0]/mixture"/>
    <float n="7" alias="/controls/engines/engine[1]/mixture"/>
    <float n="8" alias="/controls/engines/engine[2]/mixture"/>
   </generic>
  </multiplay>
 </sim>

 <!-- Local input properties. -->
 <controls>
  <flight>
   <!-- slats type="double"> 0.0 </slats -->
   <!-- speedbrake type="double"> 0.0 </speedbrake -->
   <!-- spoilers type="double"> 0.0 </spoilers -->
   <engines>
    <engine>
     <throttle        type="double"/>   <!-- local cmd input -->
     <mixture         type="double"/>   <!-- local cmd input -->
     <propeller-pitch type="double"/>   <!-- local cmd input -->
    </engine>
    <engine>
     <throttle        type="double"/>   <!-- local cmd input -->
     <mixture         type="double"/>   <!-- local cmd input -->
     <propeller-pitch type="double"/>   <!-- local cmd input -->
    </engine>
    <engine>
     <throttle        type="double"/>   <!-- local cmd input -->
     <mixture         type="double"/>   <!-- local cmd input -->
     <propeller-pitch type="double"/>   <!-- local cmd input -->
    </engine>
   </engines>
  </flight>
 </controls>


 <input>
  <keyboard>
   <!-- Keyboard commands -->

   <!-- Ballast commands ====================================== -->
   <key n="87"> 
    <name>W</name>
    <desc>Perform on-ground weigh-off.</desc>
    <binding> 
     <command>nasal</command>
     <script>
      gui.popupTip("Weigh-off in progress.");
      ZLTNT.auto_weighoff();
     </script>     
    </binding>
   </key>

   <key n="119">
    <name>w</name>
    <desc>Show current on-ground weight.</desc>
    <binding>
     <command>nasal</command>
     <script>
      ZLTNT.print_wow();
     </script>
    </binding>
   </key>

   <key n="100">
    <name>d</name>
    <desc>Drop 0.1% ballast</desc>
    <repeatable type="bool">true</repeatable>
    <binding>
     <command>nasal</command>
     <script>
       gui.popupTip("Dropping ballast!");
       interpolate(ZLTNT.ballast_p,
                   0.999 * getprop(ZLTNT.ballast_p), 0.5);
     </script>
    </binding>
   </key>

   <key n="68">
    <name>D</name>
    <desc>Drop 1% ballast</desc>
    <repeatable type="bool">true</repeatable>
    <binding>
     <command>nasal</command>
     <script>
       gui.popupTip("Dropping ballast!");
       interpolate(ZLTNT.ballast_p,
                   0.99 * getprop(ZLTNT.ballast_p), 0.5);
     </script>
    </binding>
   </key>

   <!-- Gas cell commands ====================================== -->
   <key n="70">
    <name>F</name>
    <desc>Open gas valve.</desc>
    <binding>
     <command>nasal</command>
     <script>
       gui.popupTip("Gas valve open!");
       setprop("/fdm/jsbsim/buoyant_forces/gas-cell/valve_open",
               1.00);
     </script>
    </binding>
   </key>

   <key n="102">
    <name>f</name>
    <desc>Close gas valve.</desc>
    <binding>
     <command>nasal</command>
     <script>
       gui.popupTip("Gas valve closed!");
       setprop("/fdm/jsbsim/buoyant_forces/gas-cell/valve_open",
               0.00);
     </script>
    </binding>
   </key>

   <!-- Ballonet commands ====================================== -->
   <key n="113">
    <name>q</name>
    <desc>Deflate forward ballonet</desc>
    <repeatable type="bool">true</repeatable>
    <binding>
     <command>nasal</command>
     <script>
      ZLTNT.step_ballonet_cmd(0, -0.05)
     </script>
    </binding>
   </key>
   <key n="81">
    <name>Q</name>
    <desc>Inflate forward ballonet</desc>
    <repeatable type="bool">true</repeatable>
    <binding>
     <command>nasal</command>
     <script>
      ZLTNT.step_ballonet_cmd(0, 0.05)
     </script>
    </binding>
   </key>

   <key n="97">
    <name>a</name>
    <desc>Deflate aft ballonet</desc>
    <repeatable type="bool">true</repeatable>
    <binding>
     <command>nasal</command>
     <script>
      ZLTNT.step_ballonet_cmd(1, -0.05)
     </script>
    </binding>
   </key>
   <key n="65">
    <name>A</name>
    <desc>Inflate aft ballonet</desc>
    <repeatable type="bool">true</repeatable>
    <binding>
     <command>nasal</command>
     <script>
      ZLTNT.step_ballonet_cmd(1, 0.05)
     </script>
    </binding>
   </key>

   <!-- Mooring commands ======================================= -->
   <key n="85">
    <name>U</name>
    <desc>Attach mooring wire.</desc>
    <binding>
     <command>nasal</command>
     <script>
       ZLTNT.mooring.attach_mooring_wire();
     </script>
    </binding>
   </key>

   <key n="89">
    <name>Y</name>
    <desc>Release mooring connection or wire.</desc>
    <binding>
     <command>nasal</command>
     <script>
       ZLTNT.mooring.release_mooring();
     </script>
    </binding>
   </key>

   <key n="117">
    <name>u</name>
    <desc>Winch in mooring wire.</desc>
    <binding>
     <command>nasal</command>
     <script>
       var sp = getprop("/fdm/jsbsim/mooring/winch-speed-fps");
       ZLTNT.mooring.set_winch_speed(sp - 0.5);
     </script>
    </binding>
   </key>

   <key n="121">
    <name>y</name>
    <desc>Winch out mooring wire.</desc>
    <binding>
     <command>nasal</command>
     <script>
       var sp = getprop("/fdm/jsbsim/mooring/winch-speed-fps");
       ZLTNT.mooring.set_winch_speed(sp + 0.5);
     </script>
    </binding>
   </key>

  </keyboard>
 </input>

</PropertyList>
